openapi: 3.0.0
info:
  title: LoopBack Application
  version: 1.0.0
paths:
  /candidates/count:
    get:
      x-controller-name: CandidatesController
      x-operation-name: count
      tags:
        - CandidatesController
      responses:
        '200':
          description: Candidates model count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: CandidatesController.count
  '/candidates/{id}':
    put:
      x-controller-name: CandidatesController
      x-operation-name: replaceById
      tags:
        - CandidatesController
      responses:
        '204':
          description: Candidates PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Candidates'
        x-parameter-index: 1
      operationId: CandidatesController.replaceById
    patch:
      x-controller-name: CandidatesController
      x-operation-name: updateById
      tags:
        - CandidatesController
      responses:
        '204':
          description: Candidates PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidatesPartial'
        x-parameter-index: 1
      operationId: CandidatesController.updateById
    get:
      x-controller-name: CandidatesController
      x-operation-name: findById
      tags:
        - CandidatesController
      responses:
        '200':
          description: Candidates model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidates'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: CandidatesController.findById
    delete:
      x-controller-name: CandidatesController
      x-operation-name: deleteById
      tags:
        - CandidatesController
      responses:
        '204':
          description: Candidates DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: CandidatesController.deleteById
  /candidates:
    post:
      x-controller-name: CandidatesController
      x-operation-name: create
      tags:
        - CandidatesController
      responses:
        '200':
          description: Candidates model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidates'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCandidates'
      operationId: CandidatesController.create
    patch:
      x-controller-name: CandidatesController
      x-operation-name: updateAll
      tags:
        - CandidatesController
      responses:
        '200':
          description: Candidates PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidatesPartial'
      operationId: CandidatesController.updateAll
    get:
      x-controller-name: CandidatesController
      x-operation-name: find
      tags:
        - CandidatesController
      responses:
        '200':
          description: Array of Candidates model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Candidates'
      parameters:
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
              fields:
                type: object
                properties:
                  id:
                    type: boolean
                  surname:
                    type: boolean
                  name:
                    type: boolean
                  personalIdentificationNumber:
                    type: boolean
                  birhtPlace:
                    type: boolean
                  postalCode:
                    type: boolean
                  town:
                    type: boolean
                  street:
                    type: boolean
                  houseNumber:
                    type: boolean
                  flatNumber:
                    type: boolean
                  mobileNumber:
                    type: boolean
                  email:
                    type: boolean
                  theoryStartDate:
                    type: boolean
                  practiceStartDate:
                    type: boolean
                  trainingPlace:
                    type: boolean
              offset:
                type: integer
                minimum: 0
              limit:
                type: integer
                minimum: 0
              skip:
                type: integer
                minimum: 0
              order:
                type: array
                items:
                  type: string
      operationId: CandidatesController.find
  /categories/count:
    get:
      x-controller-name: CategoriesController
      x-operation-name: count
      tags:
        - CategoriesController
      responses:
        '200':
          description: Categories model count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: CategoriesController.count
  '/categories/{id}':
    put:
      x-controller-name: CategoriesController
      x-operation-name: replaceById
      tags:
        - CategoriesController
      responses:
        '204':
          description: Categories PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categories'
        x-parameter-index: 1
      operationId: CategoriesController.replaceById
    patch:
      x-controller-name: CategoriesController
      x-operation-name: updateById
      tags:
        - CategoriesController
      responses:
        '204':
          description: Categories PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriesPartial'
        x-parameter-index: 1
      operationId: CategoriesController.updateById
    get:
      x-controller-name: CategoriesController
      x-operation-name: findById
      tags:
        - CategoriesController
      responses:
        '200':
          description: Categories model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: CategoriesController.findById
    delete:
      x-controller-name: CategoriesController
      x-operation-name: deleteById
      tags:
        - CategoriesController
      responses:
        '204':
          description: Categories DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: CategoriesController.deleteById
  /categories:
    post:
      x-controller-name: CategoriesController
      x-operation-name: create
      tags:
        - CategoriesController
      responses:
        '200':
          description: Categories model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCategories'
      operationId: CategoriesController.create
    patch:
      x-controller-name: CategoriesController
      x-operation-name: updateAll
      tags:
        - CategoriesController
      responses:
        '200':
          description: Categories PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriesPartial'
      operationId: CategoriesController.updateAll
    get:
      x-controller-name: CategoriesController
      x-operation-name: find
      tags:
        - CategoriesController
      responses:
        '200':
          description: Array of Categories model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categories'
      parameters:
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
              fields:
                type: object
                properties:
                  id:
                    type: boolean
                  symbol:
                    type: boolean
                  description:
                    type: boolean
                  instructorsId:
                    type: boolean
              offset:
                type: integer
                minimum: 0
              limit:
                type: integer
                minimum: 0
              skip:
                type: integer
                minimum: 0
              order:
                type: array
                items:
                  type: string
      operationId: CategoriesController.find
  /courses/count:
    get:
      x-controller-name: CoursesController
      x-operation-name: count
      tags:
        - CoursesController
      responses:
        '200':
          description: Courses model count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: CoursesController.count
  '/courses/{id}/categories':
    get:
      x-controller-name: CoursesCategoriesController
      x-operation-name: getCategories
      tags:
        - CoursesCategoriesController
      responses:
        '200':
          description: Categories belonging to Courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categories'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: CoursesCategoriesController.getCategories
  '/courses/{id}/instructors':
    post:
      x-controller-name: CoursesInstructorsController
      x-operation-name: create
      tags:
        - CoursesInstructorsController
      responses:
        '200':
          description: Courses model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instructors'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewInstructorsInCourses'
        x-parameter-index: 1
      operationId: CoursesInstructorsController.create
    patch:
      x-controller-name: CoursesInstructorsController
      x-operation-name: patch
      tags:
        - CoursesInstructorsController
      responses:
        '200':
          description: Courses.Instructors PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstructorsPartial'
        x-parameter-index: 1
      operationId: CoursesInstructorsController.patch
    get:
      x-controller-name: CoursesInstructorsController
      x-operation-name: find
      tags:
        - CoursesInstructorsController
      responses:
        '200':
          description: Array of Instructors's belonging to Courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instructors'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            additionalProperties: true
      operationId: CoursesInstructorsController.find
    delete:
      x-controller-name: CoursesInstructorsController
      x-operation-name: delete
      tags:
        - CoursesInstructorsController
      responses:
        '200':
          description: Courses.Instructors DELETE success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: CoursesInstructorsController.delete
  '/courses/{id}/students':
    post:
      x-controller-name: CoursesStudentsController
      x-operation-name: create
      tags:
        - CoursesStudentsController
      responses:
        '200':
          description: Courses model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudentsInCourses'
        x-parameter-index: 1
      operationId: CoursesStudentsController.create
    patch:
      x-controller-name: CoursesStudentsController
      x-operation-name: patch
      tags:
        - CoursesStudentsController
      responses:
        '200':
          description: Courses.Students PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentsPartial'
        x-parameter-index: 1
      operationId: CoursesStudentsController.patch
    get:
      x-controller-name: CoursesStudentsController
      x-operation-name: find
      tags:
        - CoursesStudentsController
      responses:
        '200':
          description: Array of Students's belonging to Courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Students'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            additionalProperties: true
      operationId: CoursesStudentsController.find
    delete:
      x-controller-name: CoursesStudentsController
      x-operation-name: delete
      tags:
        - CoursesStudentsController
      responses:
        '200':
          description: Courses.Students DELETE success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: CoursesStudentsController.delete
  '/courses/{id}':
    put:
      x-controller-name: CoursesController
      x-operation-name: replaceById
      tags:
        - CoursesController
      responses:
        '204':
          description: Courses PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Courses'
        x-parameter-index: 1
      operationId: CoursesController.replaceById
    patch:
      x-controller-name: CoursesController
      x-operation-name: updateById
      tags:
        - CoursesController
      responses:
        '204':
          description: Courses PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesPartial'
        x-parameter-index: 1
      operationId: CoursesController.updateById
    get:
      x-controller-name: CoursesController
      x-operation-name: findById
      tags:
        - CoursesController
      responses:
        '200':
          description: Courses model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: CoursesController.findById
    delete:
      x-controller-name: CoursesController
      x-operation-name: deleteById
      tags:
        - CoursesController
      responses:
        '204':
          description: Courses DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: CoursesController.deleteById
  /courses:
    post:
      x-controller-name: CoursesController
      x-operation-name: create
      tags:
        - CoursesController
      responses:
        '200':
          description: Courses model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCourses'
      operationId: CoursesController.create
    patch:
      x-controller-name: CoursesController
      x-operation-name: updateAll
      tags:
        - CoursesController
      responses:
        '200':
          description: Courses PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesPartial'
      operationId: CoursesController.updateAll
    get:
      x-controller-name: CoursesController
      x-operation-name: find
      tags:
        - CoursesController
      responses:
        '200':
          description: Array of Courses model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Courses'
      parameters:
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
              fields:
                type: object
                properties:
                  id:
                    type: boolean
                  name:
                    type: boolean
                  startDate:
                    type: boolean
                  description:
                    type: boolean
                  categoriesId:
                    type: boolean
              offset:
                type: integer
                minimum: 0
              limit:
                type: integer
                minimum: 0
              skip:
                type: integer
                minimum: 0
              order:
                type: array
                items:
                  type: string
              include:
                type: array
                items:
                  type: object
                  properties:
                    relation:
                      type: string
                    scope:
                      properties:
                        where:
                          type: object
                        fields:
                          type: object
                          properties: {}
                        offset:
                          type: integer
                          minimum: 0
                        limit:
                          type: integer
                          minimum: 0
                        skip:
                          type: integer
                          minimum: 0
                        order:
                          type: array
                          items:
                            type: string
      operationId: CoursesController.find
  /heartbeat:
    get:
      x-controller-name: HeartbeatController
      x-operation-name: heartbeat
      tags:
        - HeartbeatController
      responses:
        '200':
          description: Ping Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  greeting:
                    type: string
                  date:
                    type: string
                  url:
                    type: string
                  headers:
                    type: object
                    properties:
                      Content-Type:
                        type: string
                    additionalProperties: true
      operationId: HeartbeatController.heartbeat
  /instructors/count:
    get:
      x-controller-name: InstuctorsController
      x-operation-name: count
      tags:
        - InstuctorsController
      responses:
        '200':
          description: Instructors model count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: InstuctorsController.count
  '/instructors/{id}/categories':
    post:
      x-controller-name: InstructorsCategoriesController
      x-operation-name: create
      tags:
        - InstructorsCategoriesController
      responses:
        '200':
          description: Instructors model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCategoriesInInstructors'
        x-parameter-index: 1
      operationId: InstructorsCategoriesController.create
    patch:
      x-controller-name: InstructorsCategoriesController
      x-operation-name: patch
      tags:
        - InstructorsCategoriesController
      responses:
        '200':
          description: Instructors.Categories PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriesPartial'
        x-parameter-index: 1
      operationId: InstructorsCategoriesController.patch
    get:
      x-controller-name: InstructorsCategoriesController
      x-operation-name: find
      tags:
        - InstructorsCategoriesController
      responses:
        '200':
          description: Array of Categories's belonging to Instructors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categories'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            additionalProperties: true
      operationId: InstructorsCategoriesController.find
    delete:
      x-controller-name: InstructorsCategoriesController
      x-operation-name: delete
      tags:
        - InstructorsCategoriesController
      responses:
        '200':
          description: Instructors.Categories DELETE success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: InstructorsCategoriesController.delete
  '/instructors/{id}/lessons':
    post:
      x-controller-name: InstructorsLessonsController
      x-operation-name: create
      tags:
        - InstructorsLessonsController
      responses:
        '200':
          description: Instructors model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lessons'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLessonsInInstructors'
        x-parameter-index: 1
      operationId: InstructorsLessonsController.create
    patch:
      x-controller-name: InstructorsLessonsController
      x-operation-name: patch
      tags:
        - InstructorsLessonsController
      responses:
        '200':
          description: Instructors.Lessons PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonsPartial'
        x-parameter-index: 1
      operationId: InstructorsLessonsController.patch
    get:
      x-controller-name: InstructorsLessonsController
      x-operation-name: find
      tags:
        - InstructorsLessonsController
      responses:
        '200':
          description: Array of Lessons's belonging to Instructors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lessons'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            additionalProperties: true
      operationId: InstructorsLessonsController.find
    delete:
      x-controller-name: InstructorsLessonsController
      x-operation-name: delete
      tags:
        - InstructorsLessonsController
      responses:
        '200':
          description: Instructors.Lessons DELETE success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: InstructorsLessonsController.delete
  '/instructors/{id}/students':
    post:
      x-controller-name: InstructorsStudentsController
      x-operation-name: create
      tags:
        - InstructorsStudentsController
      responses:
        '200':
          description: Instructors model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudentsInInstructors'
        x-parameter-index: 1
      operationId: InstructorsStudentsController.create
    patch:
      x-controller-name: InstructorsStudentsController
      x-operation-name: patch
      tags:
        - InstructorsStudentsController
      responses:
        '200':
          description: Instructors.Students PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentsPartial'
        x-parameter-index: 1
      operationId: InstructorsStudentsController.patch
    get:
      x-controller-name: InstructorsStudentsController
      x-operation-name: find
      tags:
        - InstructorsStudentsController
      responses:
        '200':
          description: Array of Students's belonging to Instructors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Students'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            additionalProperties: true
      operationId: InstructorsStudentsController.find
    delete:
      x-controller-name: InstructorsStudentsController
      x-operation-name: delete
      tags:
        - InstructorsStudentsController
      responses:
        '200':
          description: Instructors.Students DELETE success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: InstructorsStudentsController.delete
  '/instructors/{id}':
    put:
      x-controller-name: InstuctorsController
      x-operation-name: replaceById
      tags:
        - InstuctorsController
      responses:
        '204':
          description: Instructors PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instructors'
        x-parameter-index: 1
      operationId: InstuctorsController.replaceById
    patch:
      x-controller-name: InstuctorsController
      x-operation-name: updateById
      tags:
        - InstuctorsController
      responses:
        '204':
          description: Instructors PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstructorsPartial'
        x-parameter-index: 1
      operationId: InstuctorsController.updateById
    get:
      x-controller-name: InstuctorsController
      x-operation-name: findById
      tags:
        - InstuctorsController
      responses:
        '200':
          description: Instructors model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instructors'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: InstuctorsController.findById
    delete:
      x-controller-name: InstuctorsController
      x-operation-name: deleteById
      tags:
        - InstuctorsController
      responses:
        '204':
          description: Instructors DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: InstuctorsController.deleteById
  /instructors:
    post:
      x-controller-name: InstuctorsController
      x-operation-name: create
      tags:
        - InstuctorsController
      responses:
        '200':
          description: Instructors model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instructors'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewInstructors'
      operationId: InstuctorsController.create
    patch:
      x-controller-name: InstuctorsController
      x-operation-name: updateAll
      tags:
        - InstuctorsController
      responses:
        '200':
          description: Instructors PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstructorsPartial'
      operationId: InstuctorsController.updateAll
    get:
      x-controller-name: InstuctorsController
      x-operation-name: find
      tags:
        - InstuctorsController
      responses:
        '200':
          description: Array of Instructors model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instructors'
      parameters:
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
              fields:
                type: object
                properties:
                  id:
                    type: boolean
                  nick:
                    type: boolean
                  email:
                    type: boolean
                  mobileNumber:
                    type: boolean
                  name:
                    type: boolean
                  surname:
                    type: boolean
                  instructorIdentifier:
                    type: boolean
                  coursesId:
                    type: boolean
              offset:
                type: integer
                minimum: 0
              limit:
                type: integer
                minimum: 0
              skip:
                type: integer
                minimum: 0
              order:
                type: array
                items:
                  type: string
              include:
                type: array
                items:
                  type: object
                  properties:
                    relation:
                      type: string
                    scope:
                      properties:
                        where:
                          type: object
                        fields:
                          type: object
                          properties: {}
                        offset:
                          type: integer
                          minimum: 0
                        limit:
                          type: integer
                          minimum: 0
                        skip:
                          type: integer
                          minimum: 0
                        order:
                          type: array
                          items:
                            type: string
      operationId: InstuctorsController.find
  /lessons/count:
    get:
      x-controller-name: LessonsController
      x-operation-name: count
      tags:
        - LessonsController
      responses:
        '200':
          description: Lessons model count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: LessonsController.count
  '/lessons/{id}':
    put:
      x-controller-name: LessonsController
      x-operation-name: replaceById
      tags:
        - LessonsController
      responses:
        '204':
          description: Lessons PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lessons'
        x-parameter-index: 1
      operationId: LessonsController.replaceById
    patch:
      x-controller-name: LessonsController
      x-operation-name: updateById
      tags:
        - LessonsController
      responses:
        '204':
          description: Lessons PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonsPartial'
        x-parameter-index: 1
      operationId: LessonsController.updateById
    get:
      x-controller-name: LessonsController
      x-operation-name: findById
      tags:
        - LessonsController
      responses:
        '200':
          description: Lessons model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lessons'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: LessonsController.findById
    delete:
      x-controller-name: LessonsController
      x-operation-name: deleteById
      tags:
        - LessonsController
      responses:
        '204':
          description: Lessons DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: LessonsController.deleteById
  /lessons:
    post:
      x-controller-name: LessonsController
      x-operation-name: create
      tags:
        - LessonsController
      responses:
        '200':
          description: Lessons model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lessons'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLessons'
      operationId: LessonsController.create
    patch:
      x-controller-name: LessonsController
      x-operation-name: updateAll
      tags:
        - LessonsController
      responses:
        '200':
          description: Lessons PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonsPartial'
      operationId: LessonsController.updateAll
    get:
      x-controller-name: LessonsController
      x-operation-name: find
      tags:
        - LessonsController
      responses:
        '200':
          description: Array of Lessons model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lessons'
      parameters:
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
              fields:
                type: object
                properties:
                  id:
                    type: boolean
                  startDateTime:
                    type: boolean
                  endDateTime:
                    type: boolean
                  duration:
                    type: boolean
                  instructorsId:
                    type: boolean
                  studentsId:
                    type: boolean
              offset:
                type: integer
                minimum: 0
              limit:
                type: integer
                minimum: 0
              skip:
                type: integer
                minimum: 0
              order:
                type: array
                items:
                  type: string
      operationId: LessonsController.find
  /payments/count:
    get:
      x-controller-name: PaymentsController
      x-operation-name: count
      tags:
        - PaymentsController
      responses:
        '200':
          description: Payments model count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: PaymentsController.count
  '/payments/{id}':
    put:
      x-controller-name: PaymentsController
      x-operation-name: replaceById
      tags:
        - PaymentsController
      responses:
        '204':
          description: Payments PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payments'
        x-parameter-index: 1
      operationId: PaymentsController.replaceById
    patch:
      x-controller-name: PaymentsController
      x-operation-name: updateById
      tags:
        - PaymentsController
      responses:
        '204':
          description: Payments PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsPartial'
        x-parameter-index: 1
      operationId: PaymentsController.updateById
    get:
      x-controller-name: PaymentsController
      x-operation-name: findById
      tags:
        - PaymentsController
      responses:
        '200':
          description: Payments model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: PaymentsController.findById
    delete:
      x-controller-name: PaymentsController
      x-operation-name: deleteById
      tags:
        - PaymentsController
      responses:
        '204':
          description: Payments DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: PaymentsController.deleteById
  /payments:
    post:
      x-controller-name: PaymentsController
      x-operation-name: create
      tags:
        - PaymentsController
      responses:
        '200':
          description: Payments model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPayments'
      operationId: PaymentsController.create
    patch:
      x-controller-name: PaymentsController
      x-operation-name: updateAll
      tags:
        - PaymentsController
      responses:
        '200':
          description: Payments PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsPartial'
      operationId: PaymentsController.updateAll
    get:
      x-controller-name: PaymentsController
      x-operation-name: find
      tags:
        - PaymentsController
      responses:
        '200':
          description: Array of Payments model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payments'
      parameters:
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
              fields:
                type: object
                properties:
                  id:
                    type: boolean
                  date:
                    type: boolean
                  amount:
                    type: boolean
                  description:
                    type: boolean
                  paidBy:
                    type: boolean
                  paidTo:
                    type: boolean
                  studentsId:
                    type: boolean
              offset:
                type: integer
                minimum: 0
              limit:
                type: integer
                minimum: 0
              skip:
                type: integer
                minimum: 0
              order:
                type: array
                items:
                  type: string
      operationId: PaymentsController.find
  /ping:
    get:
      x-controller-name: PingController
      x-operation-name: ping
      tags:
        - PingController
      responses:
        '200':
          description: Ping Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  greeting:
                    type: string
                  date:
                    type: string
                  url:
                    type: string
                  headers:
                    type: object
                    properties:
                      Content-Type:
                        type: string
                    additionalProperties: true
      operationId: PingController.ping
  /students/count:
    get:
      x-controller-name: StudentsController
      x-operation-name: count
      tags:
        - StudentsController
      responses:
        '200':
          description: Students model count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: StudentsController.count
  '/students/{id}/lessons':
    post:
      x-controller-name: StudentsLessonsController
      x-operation-name: create
      tags:
        - StudentsLessonsController
      responses:
        '200':
          description: Students model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lessons'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLessonsInStudents'
        x-parameter-index: 1
      operationId: StudentsLessonsController.create
    patch:
      x-controller-name: StudentsLessonsController
      x-operation-name: patch
      tags:
        - StudentsLessonsController
      responses:
        '200':
          description: Students.Lessons PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonsPartial'
        x-parameter-index: 1
      operationId: StudentsLessonsController.patch
    get:
      x-controller-name: StudentsLessonsController
      x-operation-name: find
      tags:
        - StudentsLessonsController
      responses:
        '200':
          description: Array of Lessons's belonging to Students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lessons'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            additionalProperties: true
      operationId: StudentsLessonsController.find
    delete:
      x-controller-name: StudentsLessonsController
      x-operation-name: delete
      tags:
        - StudentsLessonsController
      responses:
        '200':
          description: Students.Lessons DELETE success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: StudentsLessonsController.delete
  '/students/{id}/payments':
    post:
      x-controller-name: StudentsPaymentsController
      x-operation-name: create
      tags:
        - StudentsPaymentsController
      responses:
        '200':
          description: Students model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPaymentsInStudents'
        x-parameter-index: 1
      operationId: StudentsPaymentsController.create
    patch:
      x-controller-name: StudentsPaymentsController
      x-operation-name: patch
      tags:
        - StudentsPaymentsController
      responses:
        '200':
          description: Students.Payments PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentsPartial'
        x-parameter-index: 1
      operationId: StudentsPaymentsController.patch
    get:
      x-controller-name: StudentsPaymentsController
      x-operation-name: find
      tags:
        - StudentsPaymentsController
      responses:
        '200':
          description: Array of Payments's belonging to Students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payments'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            additionalProperties: true
      operationId: StudentsPaymentsController.find
    delete:
      x-controller-name: StudentsPaymentsController
      x-operation-name: delete
      tags:
        - StudentsPaymentsController
      responses:
        '200':
          description: Students.Payments DELETE success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      operationId: StudentsPaymentsController.delete
  '/students/{id}':
    put:
      x-controller-name: StudentsController
      x-operation-name: replaceById
      tags:
        - StudentsController
      responses:
        '204':
          description: Students PUT success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Students'
        x-parameter-index: 1
      operationId: StudentsController.replaceById
    patch:
      x-controller-name: StudentsController
      x-operation-name: updateById
      tags:
        - StudentsController
      responses:
        '204':
          description: Students PATCH success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentsPartial'
        x-parameter-index: 1
      operationId: StudentsController.updateById
    get:
      x-controller-name: StudentsController
      x-operation-name: findById
      tags:
        - StudentsController
      responses:
        '200':
          description: Students model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: StudentsController.findById
    delete:
      x-controller-name: StudentsController
      x-operation-name: deleteById
      tags:
        - StudentsController
      responses:
        '204':
          description: Students DELETE success
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: StudentsController.deleteById
  /students:
    post:
      x-controller-name: StudentsController
      x-operation-name: create
      tags:
        - StudentsController
      responses:
        '200':
          description: Students model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudents'
      operationId: StudentsController.create
    patch:
      x-controller-name: StudentsController
      x-operation-name: updateAll
      tags:
        - StudentsController
      responses:
        '200':
          description: Students PATCH success count
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
      parameters:
        - name: where
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentsPartial'
      operationId: StudentsController.updateAll
    get:
      x-controller-name: StudentsController
      x-operation-name: find
      tags:
        - StudentsController
      responses:
        '200':
          description: Array of Students model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Students'
      parameters:
        - name: filter
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            properties:
              where:
                type: object
              fields:
                type: object
                properties:
                  surname:
                    type: boolean
                  id:
                    type: boolean
                  name:
                    type: boolean
                  personalIdentificationNumber:
                    type: boolean
                  birthPlace:
                    type: boolean
                  postalCode:
                    type: boolean
                  town:
                    type: boolean
                  street:
                    type: boolean
                  buildingNumber:
                    type: boolean
                  mobileNumber:
                    type: boolean
                  email:
                    type: boolean
                  courseCategory:
                    type: boolean
                  theoryStartDate:
                    type: boolean
                  practiceStartDate:
                    type: boolean
                  internalExamDate:
                    type: boolean
                  placeOfTraining:
                    type: boolean
                  archived:
                    type: boolean
                  stateRegulator:
                    type: boolean
                  instructorsId:
                    type: boolean
                  coursesId:
                    type: boolean
              offset:
                type: integer
                minimum: 0
              limit:
                type: integer
                minimum: 0
              skip:
                type: integer
                minimum: 0
              order:
                type: array
                items:
                  type: string
              include:
                type: array
                items:
                  type: object
                  properties:
                    relation:
                      type: string
                    scope:
                      properties:
                        where:
                          type: object
                        fields:
                          type: object
                          properties: {}
                        offset:
                          type: integer
                          minimum: 0
                        limit:
                          type: integer
                          minimum: 0
                        skip:
                          type: integer
                          minimum: 0
                        order:
                          type: array
                          items:
                            type: string
      operationId: StudentsController.find
servers:
  - url: 'http://127.0.0.1:3000'
components:
  schemas:
    Candidates:
      title: Candidates
      properties:
        id:
          type: number
        surname:
          type: string
        name:
          type: string
        personalIdentificationNumber:
          type: string
        birhtPlace:
          type: string
        postalCode:
          type: string
        town:
          type: string
        street:
          type: string
        houseNumber:
          type: number
        flatNumber:
          type: string
        mobileNumber:
          type: string
        email:
          type: string
        theoryStartDate:
          type: string
          format: date-time
        practiceStartDate:
          type: string
          format: date-time
        trainingPlace:
          type: string
      required:
        - surname
        - name
        - mobileNumber
        - email
    NewCandidates:
      title: NewCandidates
      description: '(Schema options: { title: ''NewCandidates'', exclude: [ ''id'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        surname:
          type: string
        name:
          type: string
        personalIdentificationNumber:
          type: string
        birhtPlace:
          type: string
        postalCode:
          type: string
        town:
          type: string
        street:
          type: string
        houseNumber:
          type: number
        flatNumber:
          type: string
        mobileNumber:
          type: string
        email:
          type: string
        theoryStartDate:
          type: string
          format: date-time
        practiceStartDate:
          type: string
          format: date-time
        trainingPlace:
          type: string
      required:
        - surname
        - name
        - mobileNumber
        - email
    CandidatesPartial:
      title: CandidatesPartial
      description: '(Schema options: { partial: true })'
      properties:
        id:
          type: number
        surname:
          type: string
        name:
          type: string
        personalIdentificationNumber:
          type: string
        birhtPlace:
          type: string
        postalCode:
          type: string
        town:
          type: string
        street:
          type: string
        houseNumber:
          type: number
        flatNumber:
          type: string
        mobileNumber:
          type: string
        email:
          type: string
        theoryStartDate:
          type: string
          format: date-time
        practiceStartDate:
          type: string
          format: date-time
        trainingPlace:
          type: string
    Categories:
      title: Categories
      properties:
        id:
          type: number
        symbol:
          type: string
        description:
          type: string
        instructorsId:
          type: number
      required:
        - symbol
    NewCategories:
      title: NewCategories
      description: '(Schema options: { title: ''NewCategories'', exclude: [ ''id'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        symbol:
          type: string
        description:
          type: string
        instructorsId:
          type: number
      required:
        - symbol
    CategoriesPartial:
      title: CategoriesPartial
      description: '(Schema options: { partial: true })'
      properties:
        id:
          type: number
        symbol:
          type: string
        description:
          type: string
        instructorsId:
          type: number
    Instructors:
      title: Instructors
      properties:
        id:
          type: number
        nick:
          type: string
        email:
          type: string
        mobileNumber:
          type: string
        name:
          type: string
        surname:
          type: string
        instructorIdentifier:
          type: string
        coursesId:
          type: number
      required:
        - email
        - mobileNumber
        - name
        - surname
        - instructorIdentifier
    NewInstructorsInCourses:
      title: NewInstructorsInCourses
      description: '(Schema options: { title: ''NewInstructorsInCourses'', exclude: [ ''id'' ], optional: [ ''coursesId'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        nick:
          type: string
        email:
          type: string
        mobileNumber:
          type: string
        name:
          type: string
        surname:
          type: string
        instructorIdentifier:
          type: string
        coursesId:
          type: number
      required:
        - email
        - mobileNumber
        - name
        - surname
        - instructorIdentifier
    InstructorsPartial:
      title: InstructorsPartial
      description: '(Schema options: { partial: true })'
      properties:
        id:
          type: number
        nick:
          type: string
        email:
          type: string
        mobileNumber:
          type: string
        name:
          type: string
        surname:
          type: string
        instructorIdentifier:
          type: string
        coursesId:
          type: number
    Students:
      title: Students
      properties:
        surname:
          type: string
        id:
          type: number
        name:
          type: string
        personalIdentificationNumber:
          type: string
        birthPlace:
          type: string
        postalCode:
          type: string
        town:
          type: string
        street:
          type: string
        buildingNumber:
          type: string
        mobileNumber:
          type: number
        email:
          type: string
        courseCategory:
          type: string
        theoryStartDate:
          type: string
        practiceStartDate:
          type: string
        internalExamDate:
          type: string
        placeOfTraining:
          type: boolean
        archived:
          type: boolean
        stateRegulator:
          type: string
        instructorsId:
          type: number
        coursesId:
          type: number
      required:
        - surname
        - name
    NewStudentsInCourses:
      title: NewStudentsInCourses
      description: '(Schema options: { title: ''NewStudentsInCourses'', exclude: [ ''id'' ], optional: [ ''coursesId'' ] })'
      properties:
        surname:
          type: string
        name:
          type: string
        personalIdentificationNumber:
          type: string
        birthPlace:
          type: string
        postalCode:
          type: string
        town:
          type: string
        street:
          type: string
        buildingNumber:
          type: string
        mobileNumber:
          type: number
        email:
          type: string
        courseCategory:
          type: string
        theoryStartDate:
          type: string
        practiceStartDate:
          type: string
        internalExamDate:
          type: string
        placeOfTraining:
          type: boolean
        archived:
          type: boolean
        stateRegulator:
          type: string
        instructorsId:
          type: number
        coursesId:
          type: number
      required:
        - surname
        - name
      not:
        anyOf:
          - required:
              - id
    StudentsPartial:
      title: StudentsPartial
      description: '(Schema options: { partial: true })'
      properties:
        surname:
          type: string
        id:
          type: number
        name:
          type: string
        personalIdentificationNumber:
          type: string
        birthPlace:
          type: string
        postalCode:
          type: string
        town:
          type: string
        street:
          type: string
        buildingNumber:
          type: string
        mobileNumber:
          type: number
        email:
          type: string
        courseCategory:
          type: string
        theoryStartDate:
          type: string
        practiceStartDate:
          type: string
        internalExamDate:
          type: string
        placeOfTraining:
          type: boolean
        archived:
          type: boolean
        stateRegulator:
          type: string
        instructorsId:
          type: number
        coursesId:
          type: number
    Courses:
      title: Courses
      properties:
        id:
          type: number
        name:
          type: string
        startDate:
          type: string
          format: date-time
        description:
          type: string
        categoriesId:
          type: number
      required:
        - name
    NewCourses:
      title: NewCourses
      description: '(Schema options: { title: ''NewCourses'', exclude: [ ''id'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        name:
          type: string
        startDate:
          type: string
          format: date-time
        description:
          type: string
        categoriesId:
          type: number
      required:
        - name
    CoursesPartial:
      title: CoursesPartial
      description: '(Schema options: { partial: true })'
      properties:
        id:
          type: number
        name:
          type: string
        startDate:
          type: string
          format: date-time
        description:
          type: string
        categoriesId:
          type: number
    NewCategoriesInInstructors:
      title: NewCategoriesInInstructors
      description: '(Schema options: { title: ''NewCategoriesInInstructors'', exclude: [ ''id'' ], optional: [ ''instructorsId'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        symbol:
          type: string
        description:
          type: string
        instructorsId:
          type: number
      required:
        - symbol
    Lessons:
      title: Lessons
      properties:
        id:
          type: number
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        duration:
          type: number
        instructorsId:
          type: number
        studentsId:
          type: number
      required:
        - startDateTime
        - endDateTime
    NewLessonsInInstructors:
      title: NewLessonsInInstructors
      description: '(Schema options: { title: ''NewLessonsInInstructors'', exclude: [ ''id'' ], optional: [ ''instructorsId'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        duration:
          type: number
        instructorsId:
          type: number
        studentsId:
          type: number
      required:
        - startDateTime
        - endDateTime
    LessonsPartial:
      title: LessonsPartial
      description: '(Schema options: { partial: true })'
      properties:
        id:
          type: number
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        duration:
          type: number
        instructorsId:
          type: number
        studentsId:
          type: number
    NewStudentsInInstructors:
      title: NewStudentsInInstructors
      description: '(Schema options: { title: ''NewStudentsInInstructors'', exclude: [ ''id'' ], optional: [ ''instructorsId'' ] })'
      properties:
        surname:
          type: string
        name:
          type: string
        personalIdentificationNumber:
          type: string
        birthPlace:
          type: string
        postalCode:
          type: string
        town:
          type: string
        street:
          type: string
        buildingNumber:
          type: string
        mobileNumber:
          type: number
        email:
          type: string
        courseCategory:
          type: string
        theoryStartDate:
          type: string
        practiceStartDate:
          type: string
        internalExamDate:
          type: string
        placeOfTraining:
          type: boolean
        archived:
          type: boolean
        stateRegulator:
          type: string
        instructorsId:
          type: number
        coursesId:
          type: number
      required:
        - surname
        - name
      not:
        anyOf:
          - required:
              - id
    NewInstructors:
      title: NewInstructors
      description: '(Schema options: { title: ''NewInstructors'', exclude: [ ''id'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        nick:
          type: string
        email:
          type: string
        mobileNumber:
          type: string
        name:
          type: string
        surname:
          type: string
        instructorIdentifier:
          type: string
        coursesId:
          type: number
      required:
        - email
        - mobileNumber
        - name
        - surname
        - instructorIdentifier
    NewLessons:
      title: NewLessons
      description: '(Schema options: { title: ''NewLessons'', exclude: [ ''id'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        duration:
          type: number
        instructorsId:
          type: number
        studentsId:
          type: number
      required:
        - startDateTime
        - endDateTime
    Payments:
      title: Payments
      properties:
        id:
          type: number
        date:
          type: string
          format: date-time
        amount:
          type: number
        description:
          type: string
        paidBy:
          type: string
        paidTo:
          type: string
        studentsId:
          type: number
      required:
        - date
        - amount
        - paidBy
        - paidTo
    NewPayments:
      title: NewPayments
      description: '(Schema options: { title: ''NewPayments'', exclude: [ ''id'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        date:
          type: string
          format: date-time
        amount:
          type: number
        description:
          type: string
        paidBy:
          type: string
        paidTo:
          type: string
        studentsId:
          type: number
      required:
        - date
        - amount
        - paidBy
        - paidTo
    PaymentsPartial:
      title: PaymentsPartial
      description: '(Schema options: { partial: true })'
      properties:
        id:
          type: number
        date:
          type: string
          format: date-time
        amount:
          type: number
        description:
          type: string
        paidBy:
          type: string
        paidTo:
          type: string
        studentsId:
          type: number
    NewLessonsInStudents:
      title: NewLessonsInStudents
      description: '(Schema options: { title: ''NewLessonsInStudents'', exclude: [ ''id'' ], optional: [ ''studentsId'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        duration:
          type: number
        instructorsId:
          type: number
        studentsId:
          type: number
      required:
        - startDateTime
        - endDateTime
    NewPaymentsInStudents:
      title: NewPaymentsInStudents
      description: '(Schema options: { title: ''NewPaymentsInStudents'', exclude: [ ''id'' ], optional: [ ''studentsId'' ] })'
      not:
        anyOf:
          - required:
              - id
      properties:
        date:
          type: string
          format: date-time
        amount:
          type: number
        description:
          type: string
        paidBy:
          type: string
        paidTo:
          type: string
        studentsId:
          type: number
      required:
        - date
        - amount
        - paidBy
        - paidTo
    NewStudents:
      title: NewStudents
      description: '(Schema options: { title: ''NewStudents'', exclude: [ ''id'' ] })'
      properties:
        surname:
          type: string
        name:
          type: string
        personalIdentificationNumber:
          type: string
        birthPlace:
          type: string
        postalCode:
          type: string
        town:
          type: string
        street:
          type: string
        buildingNumber:
          type: string
        mobileNumber:
          type: number
        email:
          type: string
        courseCategory:
          type: string
        theoryStartDate:
          type: string
        practiceStartDate:
          type: string
        internalExamDate:
          type: string
        placeOfTraining:
          type: boolean
        archived:
          type: boolean
        stateRegulator:
          type: string
        instructorsId:
          type: number
        coursesId:
          type: number
      required:
        - surname
        - name
      not:
        anyOf:
          - required:
              - id
